/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.MainPanel;
import javax.swing.*;
import java.awt.BorderLayout;
import java.util.Date;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FlowLayout;
import javax.swing.table.*;
import com.toedter.calendar.JDateChooser;
import java.util.List;
import java.util.Map;
import java.util.LinkedHashMap;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import BUS.ThongKeBUS;
import DTO.ThongKeDTO;
import java.util.ArrayList;
import DTO.ChiTietHoaDonDTO;
/**
 *
 * @author drunkenpipe
 */
public class ThongKePanel extends javax.swing.JPanel {
    JScrollPane scrollPane = new JScrollPane();
    private ThongKeBUS thongKeBUS = new ThongKeBUS();
    JPanel leftPanel;
    JPanel dateFromPanel;
    JPanel dateToPanel;
    /**
     * Creates new form ThongKePanel
     */
    public ThongKePanel() {
        initComponents();
        thongKeBUS = new ThongKeBUS();
        setLayout(new BorderLayout());
        addComponentsToLayout();
        tableCreation();
    }
    private String simpleDate(Date date){
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String dateStr = sdf.format(date);
        return dateStr;
    }
     private void addComponentsToLayout() {
          //Ô∏è Create date pickers
        JDateChooser from = new JDateChooser();
        JDateChooser to = new JDateChooser();

        // Panel for "T·ª´ ng√†y"
        dateFromPanel = new JPanel();
        dateFromPanel.setBorder(BorderFactory.createTitledBorder("T·ª´ ng√†y"));
        from.setPreferredSize(new Dimension(120, 25));
        dateFromPanel.add(from);
        
        // Panel for "ƒê·∫øn ng√†y"
        dateToPanel = new JPanel();
        dateToPanel.setBorder(BorderFactory.createTitledBorder("ƒê·∫øn ng√†y"));
        to.setPreferredSize(new Dimension(120, 25));
        dateToPanel.add(to);
        
        // Create sub-panels
        leftPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        leftPanel.add(boxA);
        leftPanel.add(boxB);
        leftPanel.add(boxC);
        leftPanel.add(dateFromPanel);
        leftPanel.add(dateToPanel);
        leftPanel.add(boxQuy);
        leftPanel.add(boxTuThang);
        leftPanel.add(boxDenThang);
        leftPanel.add(boxTuNam);
        leftPanel.add(boxDenNam);
        leftPanel.add(boxQuy);
        leftPanel.add(boxTrongNam);
        // Initially hide all optional time filter panels
        boxTuThang.setVisible(false);
        boxDenThang.setVisible(false);
        boxTuNam.setVisible(false);
        boxDenNam.setVisible(false);
        boxQuy.setVisible(false);
        dateFromPanel.setVisible(false);
        dateToPanel.setVisible(false);
        boxTrongNam.setVisible(false);
        JPanel rightPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT));
        rightPanel.add(createTable);
        
        // Main top panel with BorderLayout
            JPanel topPanel = new JPanel(new BorderLayout());
            topPanel.add(leftPanel, BorderLayout.CENTER);
            topPanel.add(rightPanel, BorderLayout.EAST);
        

        // üß± Layout of entire panel
        this.setLayout(new BorderLayout());
        this.add(title, BorderLayout.NORTH);
        this.add(topPanel, BorderLayout.CENTER);
        this.add(scrollPane, BorderLayout.SOUTH);
    }
    
    private void tableCreation(){
        String[] columnHeaders = {"_", "_", "_", "_", "_"};
            Object[][] mainData = {
                {"", "", "", "", ""},
                {"", "", "", "", ""},
                {"", "", "", "", ""}
            };

            // Main table
            JTable mainTable = new JTable(mainData, columnHeaders);

            
             // Put main table in scroll pane
            scrollPane.setViewportView(mainTable);

           
            
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boxA = new javax.swing.JComboBox<>();
        title = new javax.swing.JLabel();
        boxB = new javax.swing.JComboBox<>();
        boxC = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        createTable = new javax.swing.JButton();
        boxQuy = new javax.swing.JPanel();
        quy = new javax.swing.JTextField();
        boxTuNam = new javax.swing.JPanel();
        tuNam = new javax.swing.JTextField();
        boxDenNam = new javax.swing.JPanel();
        denNam = new javax.swing.JTextField();
        boxTuThang = new javax.swing.JPanel();
        tuThang = new javax.swing.JTextField();
        boxDenThang = new javax.swing.JPanel();
        denThang = new javax.swing.JTextField();
        boxTrongNam = new javax.swing.JPanel();
        trongNam = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1330, 750));

        boxA.setForeground(new java.awt.Color(0, 0, 0));
        boxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "d·∫°ng b·∫£ng", "T·ªïng thu", "T·ªïng chi", "L·ª£i nhu·∫≠n" }));
        boxA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxAActionPerformed(evt);
            }
        });

        title.setBackground(new java.awt.Color(255, 255, 255));
        title.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        title.setForeground(new java.awt.Color(0, 0, 0));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("b·∫£ng th·ªëng k√™");

        boxB.setForeground(new java.awt.Color(0, 0, 0));
        boxB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "d·∫°ng t·ªïng thu", "Kh√°ch h√†ng", "Nh√¢n vi√™n", "S·∫£n ph·∫©m", " " }));
        boxB.setAutoscrolls(true);
        boxB.setDoubleBuffered(true);
        boxB.setEnabled(false);
        boxB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxBActionPerformed(evt);
            }
        });

        boxC.setForeground(new java.awt.Color(0, 0, 0));
        boxC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "d·∫°ng l·ªãch", "Th√°ng", "Qu√Ω", "NƒÉm", "Trong v√πng...", " " }));
        boxC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCActionPerformed(evt);
            }
        });

        createTable.setText("T·∫°o b·∫£ng");
        createTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTableActionPerformed(evt);
            }
        });

        boxQuy.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Qu√Ω nƒÉm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        javax.swing.GroupLayout boxQuyLayout = new javax.swing.GroupLayout(boxQuy);
        boxQuy.setLayout(boxQuyLayout);
        boxQuyLayout.setHorizontalGroup(
            boxQuyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxQuyLayout.createSequentialGroup()
                .addComponent(quy, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );
        boxQuyLayout.setVerticalGroup(
            boxQuyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boxQuyLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(quy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        boxTuNam.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "T·ª´ nƒÉm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        javax.swing.GroupLayout boxTuNamLayout = new javax.swing.GroupLayout(boxTuNam);
        boxTuNam.setLayout(boxTuNamLayout);
        boxTuNamLayout.setHorizontalGroup(
            boxTuNamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxTuNamLayout.createSequentialGroup()
                .addComponent(tuNam, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );
        boxTuNamLayout.setVerticalGroup(
            boxTuNamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boxTuNamLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tuNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        boxDenNam.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ƒê·∫øn nƒÉm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        javax.swing.GroupLayout boxDenNamLayout = new javax.swing.GroupLayout(boxDenNam);
        boxDenNam.setLayout(boxDenNamLayout);
        boxDenNamLayout.setHorizontalGroup(
            boxDenNamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxDenNamLayout.createSequentialGroup()
                .addComponent(denNam, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );
        boxDenNamLayout.setVerticalGroup(
            boxDenNamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boxDenNamLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(denNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        boxTuThang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "T·ª´ th√°ng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        javax.swing.GroupLayout boxTuThangLayout = new javax.swing.GroupLayout(boxTuThang);
        boxTuThang.setLayout(boxTuThangLayout);
        boxTuThangLayout.setHorizontalGroup(
            boxTuThangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxTuThangLayout.createSequentialGroup()
                .addComponent(tuThang, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );
        boxTuThangLayout.setVerticalGroup(
            boxTuThangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boxTuThangLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tuThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        boxDenThang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ƒê·∫øn th√°ng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        javax.swing.GroupLayout boxDenThangLayout = new javax.swing.GroupLayout(boxDenThang);
        boxDenThang.setLayout(boxDenThangLayout);
        boxDenThangLayout.setHorizontalGroup(
            boxDenThangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxDenThangLayout.createSequentialGroup()
                .addComponent(denThang, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                .addContainerGap())
        );
        boxDenThangLayout.setVerticalGroup(
            boxDenThangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boxDenThangLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(denThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        boxTrongNam.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Trong nƒÉm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        javax.swing.GroupLayout boxTrongNamLayout = new javax.swing.GroupLayout(boxTrongNam);
        boxTrongNam.setLayout(boxTrongNamLayout);
        boxTrongNamLayout.setHorizontalGroup(
            boxTrongNamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxTrongNamLayout.createSequentialGroup()
                .addComponent(trongNam, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );
        boxTrongNamLayout.setVerticalGroup(
            boxTrongNamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boxTrongNamLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(trongNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boxA, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxB, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxC, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxQuy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxTuNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boxDenNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boxTuThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boxDenThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                        .addComponent(createTable)
                        .addGap(42, 42, 42))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(527, 527, 527)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(boxTrongNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boxQuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(boxA, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(boxB, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(boxC, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(boxTuNam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boxDenNam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boxTuThang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boxDenThang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(boxTrongNam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(583, 583, 583))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void boxAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxAActionPerformed
        String selected = (String) boxA.getSelectedItem();
        if ("T·ªïng thu".equals(selected)) {
            boxB.setEnabled(true);
        } else {
            boxB.setEnabled(false);
        }
    }//GEN-LAST:event_boxAActionPerformed

    private void boxBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxBActionPerformed

    private void boxCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCActionPerformed
        String selectedBoxC = (String) boxC.getSelectedItem();
        
         // Hide all panels first
        boxTuThang.setVisible(false);
        boxDenThang.setVisible(false);
        boxTuNam.setVisible(false);
        boxDenNam.setVisible(false);
        boxQuy.setVisible(false);
        dateFromPanel.setVisible(false);
        dateToPanel.setVisible(false);
        boxTrongNam.setVisible(false);
        // Show relevant ones
        if ("Th√°ng".equals(selectedBoxC)) {
            boxTuThang.setVisible(true);
            boxDenThang.setVisible(true);
            boxTrongNam.setVisible(true);
        } else if ("Qu√Ω".equals(selectedBoxC)) {
            boxQuy.setVisible(true);
        } else if ("NƒÉm".equals(selectedBoxC)) {
            boxTuNam.setVisible(true);
            boxDenNam.setVisible(true);
        } else if ("Trong v√πng...".equals(selectedBoxC)) {
            dateFromPanel.setVisible(true);
            dateToPanel.setVisible(true);
        }

        // Refresh layout
        leftPanel.revalidate();
        leftPanel.repaint();
    }//GEN-LAST:event_boxCActionPerformed

    private void createTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTableActionPerformed
        String typeA     = (String) boxA.getSelectedItem();
        String typeB     = (String) boxB.getSelectedItem();
        String timeGroup = (String) boxC.getSelectedItem();

        // 1) Validate Box A / B / C
        if (!"T·ªïng thu".equals(typeA)) {
            JOptionPane.showMessageDialog(this, "Xin ch·ªçn 'T·ªïng thu' ·ªü Box A", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (boxB.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Xin ch·ªçn Box B (Kh√°ch h√†ng/Nh√¢n vi√™n/S·∫£n ph·∫©m)", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (boxC.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Xin ch·ªçn Box C (Th√°ng/Qu√Ω/NƒÉm/Trong v√πng...)", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // 2) Determine date range and column labels
            List<String> columns = new ArrayList<>();
            String fromDate = "1970-01-01", toDate = "9999-12-31";

            // these need to be visible in the pivot loop:
            int startMonth = 1, endMonth = 12, yearForMonth = 0;

            switch (timeGroup) {
              case "Th√°ng":
                startMonth  = Integer.parseInt(tuThang.getText());
                endMonth    = Integer.parseInt(denThang.getText());
                yearForMonth= Integer.parseInt(trongNam.getText());
                fromDate = String.format("%04d-%02d-01", yearForMonth, startMonth);
                toDate   = String.format("%04d-%02d-31", yearForMonth, endMonth);
                for (int m = startMonth; m <= endMonth; m++) {
                  columns.add("Th√°ng " + m);
                }
                break;
            case "Qu√Ω":
                // quy is the year
                int y = Integer.parseInt(quy.getText());
                // restrict to that year:
                fromDate = y + "-01-01";
                toDate   = y + "-12-31";
                columns.addAll(List.of("Q1", "Q2", "Q3", "Q4"));
                break;

            case "NƒÉm":
                int y1 = Integer.parseInt(tuNam.getText());
                int y2 = Integer.parseInt(denNam.getText());
                for (int yr = y1; yr <= y2; yr++) {
                    columns.add(String.valueOf(yr));
                }
                break;

            case "Trong v√πng...":
                JDateChooser fromCal = (JDateChooser) dateFromPanel.getComponent(0);
                JDateChooser toCal   = (JDateChooser) dateToPanel.getComponent(0);
                if (fromCal.getDate()==null || toCal.getDate()==null) {
                    JOptionPane.showMessageDialog(this, "Xin ch·ªçn c·∫£ T·ª´ ng√†y v√† ƒê·∫øn ng√†y.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                fromDate = simpleDate(fromCal.getDate());
                toDate   = simpleDate(toCal.getDate());
                columns.add(fromDate + " ‚Üí " + toDate);
                break;
        }
        // Always add the ‚ÄúTC‚Äù column:
        columns.add("TC");

        // 3) Fetch + optional date-filter
        ArrayList<ThongKeDTO> all = thongKeBUS.getAllThongKe();
        if ("Trong v√πng...".equals(timeGroup) || "Qu√Ω".equals(timeGroup)) {
            all = thongKeBUS.filterByDate(all, fromDate, toDate);
        }

        // 4) Build the pivot map
        Map<String,double[]> pivot = new LinkedHashMap<>();
        for (ThongKeDTO dto : all) {
            int bucket = 0;
            double value;

            switch (timeGroup) {
              case "Th√°ng":
                // extract the month from the invoice date
                int mon = dto.getHoadon().getNgayLapHD().getMonthValue();
                // only count if within range
                if (mon < startMonth || mon > endMonth) continue;
                bucket = mon - startMonth; 
                value  = dto.getHoadon().getTongTien().doubleValue();
                break;

              case "Qu√Ω":
                int q = (dto.getHoadon().getNgayLapHD().getMonthValue() - 1) / 3;
                bucket = q;
                value  = dto.getHoadon().getTongTien().doubleValue();
                break;

              case "NƒÉm":
                int yr = dto.getHoadon().getNgayLapHD().getYear();
                bucket = yr - Integer.parseInt(tuNam.getText());
                value  = dto.getHoadon().getTongTien().doubleValue();
                break;

              default: // Trong v√πng...
                bucket = 0;
                value  = dto.getHoadon().getTongTien().doubleValue();
            }

            // attribute that value to the correct rowKey exactly as before
            String key;
            if ("Kh√°ch h√†ng".equals(typeB)) key = dto.getKhachhang().getMaKH();
            else if ("Nh√¢n vi√™n".equals(typeB)) key = dto.getNhanvien().getMaNV();
            else {
              // s·∫£n ph·∫©m
              for (ChiTietHoaDonDTO c : dto.getDsChiTiet()) {
                String sp = c.getMaSP();
                pivot.putIfAbsent(sp, new double[columns.size()]);
                int b = bucket; // same bucket
                double v = c.getThanhTien();
                pivot.get(sp)[b]           += v;
                pivot.get(sp)[columns.size()-1] += v;
              }
              continue; // skip below for products
            }

            // now for KH or NV
            pivot.putIfAbsent(key, new double[columns.size()]);
            pivot.get(key)[bucket]              += value;
            pivot.get(key)[columns.size()-1]    += value;
        }

        // 5) Build table data array
        int rows = pivot.size() + 1;  // +1 for final total row
        Object[][] data = new Object[rows][columns.size()+1];
        String[] colNames = new String[columns.size()+1];
        colNames[0] = switch(typeB) {
            case "Kh√°ch h√†ng" -> "M√£ KH";
            case "Nh√¢n vi√™n"  -> "M√£ NV";
            default           -> "M√£ SP";
        };
        for (int i = 0; i < columns.size(); i++) {
            colNames[i+1] = columns.get(i);
        }

        // fill row data
        int r=0;
        for (Map.Entry<String,double[]> e : pivot.entrySet()) {
            data[r][0] = e.getKey();
            double[] vals = e.getValue();
            for (int c=0; c<vals.length; c++) {
                data[r][c+1] = vals[c];
            }
            r++;
        }
        // final TC row
        data[r][0] = "TC";
        for (int c=1; c<colNames.length; c++) {
            double sum=0;
            for (int i=0; i<rows-1; i++) {
                sum += ((Number)data[i][c]).doubleValue();
            }
            data[r][c] = sum;
        }

        // 6a) Non-editable model
        DefaultTableModel model = new DefaultTableModel(data, colNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        // 6b) Build table
        JTable tbl = new JTable(model);

        // 6c) Number-format renderer
        DefaultTableCellRenderer numberRenderer = new DefaultTableCellRenderer() {
            private final java.text.NumberFormat fmt = java.text.NumberFormat.getNumberInstance();
            @Override
            public void setValue(Object value) {
                if (value instanceof Number) {
                    setText(fmt.format(((Number) value).doubleValue()));
                } else {
                    super.setValue(value);
                }
            }
        };

        // 6d) Apply to all value columns (skip column 0 which is IDs)
        for (int c = 1; c < colNames.length; c++) {
            tbl.getColumnModel().getColumn(c).setCellRenderer(numberRenderer);
        }

        // 6e) Show
        tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        scrollPane.setViewportView(tbl);
    }//GEN-LAST:event_createTableActionPerformed

    public static void main(String[] args){
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
        public void run() {
            javax.swing.JFrame frame = new javax.swing.JFrame("Test Thong ke");
            frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
            frame.getContentPane().add(new ThongKePanel());
            frame.pack(); // Optional: sizes the frame to fit preferred size of contents
            frame.setLocationRelativeTo(null); // Center the frame
            frame.setVisible(true); // Show the frame
        }
    });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxA;
    private javax.swing.JComboBox<String> boxB;
    private javax.swing.JComboBox<String> boxC;
    private javax.swing.JPanel boxDenNam;
    private javax.swing.JPanel boxDenThang;
    private javax.swing.JPanel boxQuy;
    private javax.swing.JPanel boxQuy5;
    private javax.swing.JPanel boxQuy6;
    private javax.swing.JPanel boxQuy7;
    private javax.swing.JPanel boxTrongNam;
    private javax.swing.JPanel boxTuNam;
    private javax.swing.JPanel boxTuThang;
    private javax.swing.JButton createTable;
    private javax.swing.JTextField denNam;
    private javax.swing.JTextField denThang;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField quy;
    private javax.swing.JTextField quy5;
    private javax.swing.JTextField quy6;
    private javax.swing.JTextField quy7;
    private javax.swing.JLabel title;
    private javax.swing.JTextField trongNam;
    private javax.swing.JTextField tuNam;
    private javax.swing.JTextField tuThang;
    // End of variables declaration//GEN-END:variables
}
