/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.MainPanel;
import javax.swing.table.JTableHeader;
import BUS.NhanVienBUS;
import DTO.NhanVienDTO;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import javax.swing.*;
import javax.swing.border.EmptyBorder;

/**
 *
 * @author drunkenpipe
 */
public class NhanVienPanel extends javax.swing.JPanel {
    NhanVienBUS nvBus = new NhanVienBUS();
    /**
     * Creates new form NhanVienPanel
     */
    public NhanVienPanel() {
        initComponents();
        setLayout(new BorderLayout());
        customizeTable();
        updateTable();
        addComponentsToLayout();
        applyStyles();
    }
    private void applyStyles() {
        // Panel background
        setBackground(Color.WHITE);

        // Title label
        label1.setFont(new Font("Segoe UI", Font.BOLD, 26));
        label1.setForeground(new Color(44, 62, 80));

        // Buttons
        for (JButton b : new JButton[]{add, remove, edit}) {
            b.setBackground(new Color(109, 169, 216));
            b.setForeground(Color.WHITE);
            b.setFont(new Font("Segoe UI", Font.PLAIN, 16));
            b.setFocusPainted(false);
            b.setBorder(new EmptyBorder(8, 16, 8, 16));
        }

        // Search field
        search.setPreferredSize(new Dimension(200, 32));
        search.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        search.setBorder(BorderFactory.createLineBorder(new Color(200,200,200), 1));

        // Combo box
        searchOption.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        searchOption.setBackground(Color.WHITE);
        searchOption.setBorder(BorderFactory.createLineBorder(new Color(200,200,200)));

        // Scroll pane / table background
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        bangNV.setShowGrid(true);
        bangNV.setGridColor(new Color(240,240,240));
        bangNV.setRowHeight(36);
        bangNV.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        bangNV.setSelectionBackground(new Color(187,222,251));
    }
    private void addComponentsToLayout() {
        
        this.setLayout(new BorderLayout(10, 10));
        JPanel buttonPanelCRUD = new JPanel(new FlowLayout(FlowLayout.RIGHT));
        buttonPanelCRUD.add(add);
        buttonPanelCRUD.add(remove);
        buttonPanelCRUD.add(edit);

        JPanel buttonPanelsearch = new JPanel(new FlowLayout(FlowLayout.LEFT));
        buttonPanelsearch.add(jPanel1);
        buttonPanelsearch.add(search);

        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new BoxLayout(buttonPanel, BoxLayout.X_AXIS));
        buttonPanel.add(buttonPanelsearch);
        buttonPanel.add(buttonPanelCRUD);

        // Optional: wrap all top stuff (label + buttonPanel) in a vertical panel
        JPanel top = new JPanel();
        top.setLayout(new BoxLayout(top, BoxLayout.Y_AXIS));
        top.add(label1);
        top.add(buttonPanel);

        this.add(top, BorderLayout.NORTH);      // Top controls
        this.add(jScrollPane1, BorderLayout.CENTER);  // Table fills remaining space
    }
    private void updateTable() {    //call this whenever database changed
        ArrayList<NhanVienDTO> list = nvBus.getAllNhanVien();

        // Clear the table
        DefaultTableModel model = (DefaultTableModel) bangNV.getModel();
        model.setRowCount(0);  // Clear any existing data

        // Add rows to the table
        for (NhanVienDTO nv : list) {
            String formattedLuong = String.format("%.0f", nv.getLuongThang());  // translate from 1.5e7 to 15000000
            model.addRow(new Object[]{nv.getMaNV(), nv.getHo() + " " + nv.getTen(),formattedLuong, nv.getTrangThai()});
        }
    }
    private void customizeTable() {
        // Change the background color of the column headers
        JTableHeader header = bangNV.getTableHeader();
        header.setBackground(new java.awt.Color(44, 62, 80)); // dark blue background
        header.setForeground(new java.awt.Color(0,0,0)); // light text color

        // Optionally set custom fonts for column headers
        header.setFont(new java.awt.Font("Dialog", java.awt.Font.BOLD, 14));

        // Set the preferred column widths if needed
        bangNV.getColumnModel().getColumn(0).setPreferredWidth(100); // Column 1: "Mã nhân viên"
        bangNV.getColumnModel().getColumn(1).setPreferredWidth(150); // Column 2: "Tên nhân viên"
        bangNV.getColumnModel().getColumn(2).setPreferredWidth(100); // Column 3: "Lương tháng"
        bangNV.getColumnModel().getColumn(3).setPreferredWidth(120); // Column 4: "Trạng thái"
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        bangNV = new javax.swing.JTable();
        add = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        searchOption = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1330, 750));

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label1.setName(""); // NOI18N
        label1.setText("Quản lí nhân viên");

        bangNV.setBackground(new java.awt.Color(255, 255, 153));
        bangNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Tên nhân viên", "Lương tháng", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bangNV.setRowHeight(40);
        bangNV.setSelectionBackground(new java.awt.Color(153, 255, 255));
        bangNV.setShowGrid(true);
        jScrollPane1.setViewportView(bangNV);

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        add.setForeground(new java.awt.Color(0, 0, 0));
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Image/plus.png"))); // NOI18N
        add.setText("Thêm");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        remove.setBackground(new java.awt.Color(255, 255, 255));
        remove.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        remove.setForeground(new java.awt.Color(0, 0, 0));
        remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Image/delete.png"))); // NOI18N
        remove.setText("Xóa");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(255, 255, 255));
        edit.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        edit.setForeground(new java.awt.Color(0, 0, 0));
        edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Image/edit.png"))); // NOI18N
        edit.setText("Chỉnh sửa");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        search.setBackground(new java.awt.Color(255, 255, 255));
        search.setForeground(new java.awt.Color(0, 0, 0));
        search.setPreferredSize(new java.awt.Dimension(200, 30));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm"));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));

        searchOption.setBackground(new java.awt.Color(204, 204, 204));
        searchOption.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        searchOption.setForeground(new java.awt.Color(0, 0, 0));
        searchOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã", "Họ", "Tên", "Lương tháng", "Trạng thái", " " }));
        searchOption.setSelectedIndex(2);
        searchOption.setToolTipText("");
        searchOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchOptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchOption, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(searchOption, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 430, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(351, 351, 351))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edit)
                        .addGap(113, 113, 113)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, 1213, Short.MAX_VALUE)
                        .addGap(111, 111, 111))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add)
                            .addComponent(remove)
                            .addComponent(edit))
                        .addGap(1, 1, 1)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        JTextField tfMaNV = new JTextField("0"); // Default to 0
        JTextField tfHo = new JTextField();
        JTextField tfTen = new JTextField();
        JTextField tfLuong = new JTextField();
        String[] trangThaiOptions = {"Đang làm", "Nghỉ"};
        JComboBox<String> cbTrangThai = new JComboBox<>(trangThaiOptions);

        JPanel panel = new JPanel(new GridLayout(0, 1));
        panel.add(new JLabel("Mã nhân viên (0 sẽ mã được tự động tạo):")); // Caption with instruction
        panel.add(tfMaNV);
        panel.add(new JLabel("Họ:"));
        panel.add(tfHo);
        panel.add(new JLabel("Tên:"));
        panel.add(tfTen);
        panel.add(new JLabel("Lương tháng:"));
        panel.add(tfLuong);
        panel.add(new JLabel("Trạng thái:"));
        panel.add(cbTrangThai);

        int result = JOptionPane.showConfirmDialog(this, panel, "Thêm nhân viên mới",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            try {
                String maNV = tfMaNV.getText().trim();
                String ho = tfHo.getText().trim();
                String ten = tfTen.getText().trim();
                double luongThang = Double.parseDouble(tfLuong.getText().trim());
                int trangThai = cbTrangThai.getSelectedIndex(); // 0 for "Đang làm", 1 for "Nghỉ"

                // Validate the inputs
                if (ho.isEmpty() || ten.isEmpty() || maNV.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.");
                    return;
                }

                // Create the DTO with the updated data
                NhanVienDTO newNV = new NhanVienDTO(maNV, ho, ten, luongThang, trangThai);

                // Add the new employee
                boolean success = false;
                success = nvBus.addNhanVien(newNV);

                if (success) {
                    JOptionPane.showMessageDialog(this, "Đã thêm nhân viên mới thành công.");
                    updateTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm nhân viên thất bại. Có thể Mã NV đã tồn tại.");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Lương tháng phải là số hợp lệ.");
            }
        }
    }//GEN-LAST:event_addActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // Get the selected row index
        int selectedRow = bangNV.getSelectedRow();

        // Check if a row is selected
        if (selectedRow != -1) {
            // Retrieve the MaNV from the selected row as a String
            String maNV = (String) bangNV.getValueAt(selectedRow, 0);

            // Confirm deletion
            int confirmation = JOptionPane.showConfirmDialog(
                this,
                "Bạn có muốn xóa nhân viên với mã nhân viên: " + maNV + "?",
                "Xác nhận xóa.",
                JOptionPane.YES_NO_OPTION
            );

            // If user confirmed deletion
            if (confirmation == JOptionPane.YES_OPTION) {
                // Call the delete method from NhanVienBUS with the string MaNV
                boolean success = nvBus.deleteNhanVien(maNV);

                // Check if the deletion was successful
                if (success) {
                    JOptionPane.showMessageDialog(this, "Đã xóa thành công nhân viên.");
                    updateTable();  // Refresh the table after deletion
                } else {
                    JOptionPane.showMessageDialog(this, "Đã hủy xóa nhân viên.");
                }
            }
        } else {
            // No row selected
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhân viên để xóa.");
        }

    }//GEN-LAST:event_removeActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        int selectedRow = bangNV.getSelectedRow();

        if (selectedRow != -1) {
            String maNV = (String) bangNV.getValueAt(selectedRow, 0);
            NhanVienDTO existingNV = nvBus.getNhanVienByID(maNV);

            if (existingNV != null) {
                // Leave MaNV field blank but show label
                JTextField tfMaNV = new JTextField(); 
                tfMaNV.setText(""); // intentionally blank
                tfMaNV.setEditable(false);  // still non-editable
                tfMaNV.setEnabled(false);
                JTextField tfHo = new JTextField(existingNV.getHo());
                JTextField tfTen = new JTextField(existingNV.getTen());
                JTextField tfLuong = new JTextField(String.valueOf(existingNV.getLuongThang()));
                String[] trangThaiOptions = {"Đang làm", "Nghỉ"};
                JComboBox<String> cbTrangThai = new JComboBox<>(trangThaiOptions);
                cbTrangThai.setSelectedIndex(existingNV.getTrangThai());

                JPanel panel = new JPanel(new GridLayout(0, 1));
                panel.add(new JLabel("Mã nhân viên: (Không thể sửa)"));
                panel.add(tfMaNV);
                panel.add(new JLabel("Họ:"));
                panel.add(tfHo);
                panel.add(new JLabel("Tên:"));
                panel.add(tfTen);
                panel.add(new JLabel("Lương tháng:"));
                panel.add(tfLuong);
                panel.add(new JLabel("Trạng thái:"));
                panel.add(cbTrangThai);

                int result = JOptionPane.showConfirmDialog(this, panel, "Chỉnh sửa thông tin nhân viên",
                        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

                if (result == JOptionPane.OK_OPTION) {
                    try {
                        String ho = tfHo.getText().trim();
                        String ten = tfTen.getText().trim();
                        double luongThang = Double.parseDouble(tfLuong.getText().trim());
                        int trangThai = cbTrangThai.getSelectedIndex();

                        if (ho.isEmpty() || ten.isEmpty()) {
                            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.");
                            return;
                        }

                        NhanVienDTO updatedNV = new NhanVienDTO(maNV, ho, ten, luongThang, trangThai);

                        boolean updateSuccess = nvBus.updateNhanVien(updatedNV);
                        if (updateSuccess) {
                            JOptionPane.showMessageDialog(this, "Đã chỉnh sửa thông tin nhân viên thành công.");
                            updateTable();  // Refresh table
                        } else {
                            JOptionPane.showMessageDialog(this, "Chỉnh sửa thất bại.");
                        }

                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "Lương tháng phải là số hợp lệ.");
                    }
                }

            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhân viên để chỉnh sửa.");
        }
    }//GEN-LAST:event_editActionPerformed

    private void searchOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchOptionActionPerformed
        
    }//GEN-LAST:event_searchOptionActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        
    }//GEN-LAST:event_searchActionPerformed

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed
        String keyword = search.getText();  // Get the search keyword
        NhanVienBUS nvBus = new NhanVienBUS();

        ArrayList<NhanVienDTO> results = null;
        String searchType = searchOption.getSelectedItem().toString();
        if(!searchType.isEmpty()){
            results = nvBus.search(keyword, searchOption.getSelectedItem().toString());
            // Update table with search results
            DefaultTableModel model = (DefaultTableModel) bangNV.getModel();
            model.setRowCount(0);  // Clear the table

            for (NhanVienDTO nv : results) {
                String formattedLuong = String.format("%.0f", nv.getLuongThang());  // translate from 1.5e7 to 15000000
                model.addRow(new Object[]{nv.getMaNV(), nv.getHo() + " " + nv.getTen(), formattedLuong, nv.getTrangThai()});
            }
        }
        else
            updateTable();
    }//GEN-LAST:event_searchKeyPressed
    public static void main(String[] args){
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
        public void run() {
            javax.swing.JFrame frame = new javax.swing.JFrame("Test ");
            frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
            frame.getContentPane().add(new NhanVienPanel());
            frame.pack(); // Optional: sizes the frame to fit preferred size of contents
            frame.setLocationRelativeTo(null); // Center the frame
            frame.setVisible(true); // Show the frame
        }
    });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTable bangNV;
    private javax.swing.JButton edit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private javax.swing.JButton remove;
    private javax.swing.JTextField search;
    private javax.swing.JComboBox<String> searchOption;
    // End of variables declaration//GEN-END:variables
}
