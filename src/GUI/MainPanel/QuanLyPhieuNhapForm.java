/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.MainPanel;

import javax.swing.table.DefaultTableModel;

import DAO.*;
import BUS.*;
import DTO.*;
import com.itextpdf.text.Document;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author 0388153585
 */
public class QuanLyPhieuNhapForm extends javax.swing.JPanel {
    private DefaultTableModel model;
    private DefaultTableModel model1;
    
    /**
     * Creates new form PhieuNhapGUI
     */
    public QuanLyPhieuNhapForm() {
        initComponents();
        Vector header = new Vector();
        header.add("STT");
        header.add("M√£ phi·∫øu nh·∫≠p");
        header.add("M√£ nh√¢n vi√™n");
        header.add("M√£ nh√† cung c·∫•p");
        header.add("Ng√†y nh·∫≠p");
        header.add("Gi·ªù nh·∫≠p");
        header.add("T·ªïng ti·ªÅn");
        
        model= new DefaultTableModel(header, 0);
        PhieuNhapBUS bus = new PhieuNhapBUS();
        bus.docDS_PN();
        int i= 1;
        for(PhieuNhapDTO pn : PhieuNhapBUS.dsPN){
            Vector row = new Vector();
            row.add(i++);
            row.add(pn.maPN);
            row.add(pn.maNV);
            row.add(pn.maNCC);
            row.add(pn.ngayNhap);
            row.add(pn.gioNhap);
            row.add(pn.tongTien);
            model.addRow(row);
        }
        tblPhieuNhap.setModel(model);
        // ƒê·∫∑t ƒë·ªãnh d·∫°ng ng√†y cho c√°c JDateChooser
        dateFrom.setDateFormatString("yyyy-MM-dd");
        dateTo.setDateFormatString("yyyy-MM-dd");
        txtTimKiem.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) { timKiem(); }
            public void removeUpdate(DocumentEvent e) { timKiem(); }
            public void changedUpdate(DocumentEvent e) { timKiem(); }
        });
        txtTienTu.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) { timKiem(); }
            public void removeUpdate(DocumentEvent e) { timKiem(); }
            public void changedUpdate(DocumentEvent e) { timKiem(); }
        });

        txtTienDen.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) { timKiem(); }
            public void removeUpdate(DocumentEvent e) { timKiem(); }
            public void changedUpdate(DocumentEvent e) { timKiem(); }
        });
        dateFrom.getDateEditor().addPropertyChangeListener(evt -> timKiem());
        dateTo.getDateEditor().addPropertyChangeListener(evt -> timKiem());
        txtTimKiem1.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) { timKiem1(); }
            public void removeUpdate(DocumentEvent e) { timKiem1(); }
            public void changedUpdate(DocumentEvent e) { timKiem1(); }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnXuatEX = new javax.swing.JButton();
        btnNhapEX = new javax.swing.JButton();
        btnInPDF = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cboTimKiem = new javax.swing.JComboBox<>();
        txtTimKiem = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        dateFrom = new com.toedter.calendar.JDateChooser();
        jPanel5 = new javax.swing.JPanel();
        dateTo = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        txtTienTu = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        txtTienDen = new javax.swing.JTextField();
        btnLamMoi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhieuNhap = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblChiTietPN = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        cboTimKiem1 = new javax.swing.JComboBox<>();
        txtTimKiem1 = new javax.swing.JTextField();
        btnLamMoi1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 600));

        btnXuatEX.setBackground(new java.awt.Color(255, 204, 102));
        btnXuatEX.setForeground(new java.awt.Color(255, 255, 255));
        btnXuatEX.setText("üì§ Xu·∫•t Excel");
        btnXuatEX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatEXActionPerformed(evt);
            }
        });

        btnNhapEX.setBackground(new java.awt.Color(3, 169, 244));
        btnNhapEX.setForeground(new java.awt.Color(255, 255, 255));
        btnNhapEX.setText("üì• Nh·∫≠p Excel");
        btnNhapEX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapEXActionPerformed(evt);
            }
        });

        btnInPDF.setBackground(new java.awt.Color(156, 39, 176));
        btnInPDF.setForeground(new java.awt.Color(255, 255, 255));
        btnInPDF.setText("üñ®Ô∏è In PDF");
        btnInPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInPDFActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("T√¨m ki·∫øm"));

        cboTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "T·∫•t c·∫£", "M√£ phi·∫øu nh·∫≠p", "M√£ nh√¢n vi√™n", "M√£ nh√† cung c·∫•p", "Ng√†y nh·∫≠p", "Gi·ªù nh·∫≠p", "T·ªïng ti·ªÅn" }));

        txtTimKiem.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ng√†y l·∫≠p"));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("T·ª´:"));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("ƒê·∫øn:"));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateTo, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 4, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("T·ªïng ti·ªÅn"));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("T·ª´:"));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTienTu, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtTienTu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("ƒê·∫øn:"));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTienDen, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtTienDen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnLamMoi.setBackground(new java.awt.Color(67, 160, 71));
        btnLamMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnLamMoi.setText("üîÑ L√†m M·ªõi");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        tblPhieuNhap.setBackground(new java.awt.Color(255, 204, 102));
        tblPhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "M√£ phi·∫øu nh·∫≠p", "M√£ nh√¢n vi√™n", "M√£ nh√† cung c·∫•p", "Ng√†y nh·∫≠p", "Gi·ªù nh·∫≠p", "T·ªïng ti·ªÅn"
            }
        ));
        tblPhieuNhap.setToolTipText("");
        tblPhieuNhap.setSelectionBackground(new java.awt.Color(255, 153, 0));
        tblPhieuNhap.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblPhieuNhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuNhapMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhieuNhap);

        tblChiTietPN.setBackground(new java.awt.Color(102, 204, 255));
        tblChiTietPN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "M√£ PN", "H·ªç", "T√™n", "T√™n NCC", "T√™n SP", "S·ªë l∆∞·ª£ng", "ƒê∆°n gi√°", "Th√†nh ti·ªÅn"
            }
        ));
        tblChiTietPN.setSelectionBackground(new java.awt.Color(0, 102, 255));
        jScrollPane2.setViewportView(tblChiTietPN);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("T√¨m ki·∫øm"));

        cboTimKiem1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "T·∫•t c·∫£", "M√£ phi·∫øu nh·∫≠p", "T√™n nh√¢n vi√™n", "T√™n nh√† cung c·∫•p", "T√™n s·∫£n ph·∫©m", "S·ªë l∆∞·ª£ng", "ƒê∆°n gi√°", "Th√†nh ti·ªÅn" }));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTimKiem1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        btnLamMoi1.setBackground(new java.awt.Color(67, 160, 71));
        btnLamMoi1.setForeground(new java.awt.Color(255, 255, 255));
        btnLamMoi1.setText("üîÑ L√†m m·ªõi");
        btnLamMoi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoi1ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(25, 118, 210));

        jLabel1.setBackground(new java.awt.Color(25, 118, 210));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PHI·∫æU NH·∫¨P");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(402, 402, 402))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBackground(new java.awt.Color(255, 102, 0));

        jLabel2.setBackground(new java.awt.Color(255, 102, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Chi Ti·∫øt Phi·∫øu Nh·∫≠p");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(397, 397, 397)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLamMoi1)
                .addGap(285, 285, 285))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(540, 540, 540)
                                .addComponent(btnInPDF))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(400, 400, 400)
                                .addComponent(btnNhapEX)))
                        .addGap(45, 45, 45)
                        .addComponent(btnLamMoi))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(btnXuatEX)))
                .addGap(0, 142, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXuatEX)
                    .addComponent(btnNhapEX)
                    .addComponent(btnInPDF)
                    .addComponent(btnLamMoi))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnLamMoi1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNhapEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapEXActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();

            try (FileInputStream fis = new FileInputStream(selectedFile);
                 XSSFWorkbook workbook = new XSSFWorkbook(fis)) {

                XSSFSheet sheet = workbook.getSheetAt(0); // l·∫•y sheet ƒë·∫ßu ti√™n
                DefaultTableModel model = (DefaultTableModel) tblPhieuNhap.getModel();
                model.setRowCount(0); // x√≥a d·ªØ li·ªáu c≈©

                boolean isFirstRow = true;
                for (Row row : sheet) {
                    if (isFirstRow) {
                        isFirstRow = false; // b·ªè qua d√≤ng ti√™u ƒë·ªÅ
                        continue;
                    }

                    // T·∫°o m·ªôt Vector ƒë·ªÉ ch·ª©a c√°c gi√° tr·ªã c·ªßa m·ªôt d√≤ng
                    Vector<Object> rowData = new Vector<>();
                    for (int cn = 0; cn < 7; cn++) { // 7 c·ªôt: STT, M√£ phi·∫øu nh·∫≠p, M√£ nh√¢n vi√™n, M√£ nh√† cung c·∫•p, Ng√†y nh·∫≠p, Gi·ªù nh·∫≠p, T·ªïng ti·ªÅn
                        Cell cell = row.getCell(cn, Row.MissingCellPolicy.CREATE_NULL_AS_BLANK);

                        switch (cell.getCellType()) {
                            case STRING:
                                rowData.add(cell.getStringCellValue());
                                break;
                            case NUMERIC:
                                if (DateUtil.isCellDateFormatted(cell)) {
                                    rowData.add(cell.getDateCellValue().toString()); // Ng√†y nh·∫≠p
                                } else {
                                    rowData.add((long) cell.getNumericCellValue()); // T·ªïng ti·ªÅn ho·∫∑c c√°c s·ªë
                                }
                                break;
                            case BOOLEAN:
                                rowData.add(cell.getBooleanCellValue());
                                break;
                            case BLANK:
                                rowData.add("");
                                break;
                            default:
                                rowData.add(cell.toString());
                        }
                    }

                    // Th√™m d√≤ng v√†o model b·∫£ng
                    model.addRow(rowData);
                }

                JOptionPane.showMessageDialog(this, "ƒê√£ nh·∫≠p Excel th√†nh c√¥ng!");

            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "L·ªói khi ƒë·ªçc file Excel: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnNhapEXActionPerformed

    private void tblPhieuNhapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuNhapMouseClicked
        // TODO add your handling code here:
        int i= tblPhieuNhap.getSelectedRow();
        if(i>=0&& model.getRowCount() > 0){
            String maPN=(String) model.getValueAt(i, 1);
             
            PhieuNhapBUS bus = new PhieuNhapBUS();
            ArrayList<ChiTietPhieuNhapDTO> ds = bus.docChiTiet_PN(maPN);
            
            Vector header= new Vector();
            header.add("STT");
            header.add("M√£ PN");
            header.add("H·ªç");
            header.add("T√™n NV");
            header.add("T√™n NCC");
            header.add("T√™n SP");
            header.add("S·ªë l∆∞·ª£ng");
            header.add("ƒê∆°n gi√°");
            header.add("Th√†nh ti·ªÅn");
            
            int l = 1;
            model1 = new DefaultTableModel(header, 0);
            for(ChiTietPhieuNhapDTO ctpn: ds){
                Vector row = new Vector();
                row.add(l++);
                row.add(ctpn.maPN);
                row.add(ctpn.ho);
                row.add(ctpn.ten);
                row.add(ctpn.tenNCC);
                row.add(ctpn.tenSP);
                row.add(ctpn.soLuong);
                row.add(ctpn.donGia);
                row.add(ctpn.thanhTien);
                model1.addRow(row);
            }
            tblChiTietPN.setModel(model1);
            
//            ChiTietPhieuNhapGUI form = new ChiTietPhieuNhapGUI(model, maPN);
//            form.tblChiTietPN.setModel(model);
//            // T·∫°o JFrame ƒë·ªÉ ch·ª©a form chi ti·∫øt n√†y
//            JFrame frame = new JFrame("Chi ti·∫øt phi·∫øu nh·∫≠p");
//            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // ƒë√≥ng ch·ªâ frame n√†y
//            frame.getContentPane().add(form);
//            frame.pack(); // t·ª± ƒë·ªông co gi√£n theo k√≠ch th∆∞·ªõc form
//            frame.setLocationRelativeTo(null); // hi·ªán ·ªü gi·ªØa m√†n h√¨nh
//            frame.setVisible(true);
        }
    }//GEN-LAST:event_tblPhieuNhapMouseClicked

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        txtTimKiem.setText("");
        txtTienTu.setText("");
        txtTienDen.setText("");
        dateFrom.setDate(null);
        dateTo.setDate(null);
        cboTimKiem.setSelectedIndex(0); 

        PhieuNhapBUS bus = new PhieuNhapBUS();
        bus.docDS_PN();

        model.setRowCount(0);
        int i = 1;
        for (PhieuNhapDTO pn : PhieuNhapBUS.dsPN) {
            Vector row = new Vector();
            row.add(i++);
            row.add(pn.maPN);
            row.add(pn.maNV);
            row.add(pn.maNCC);
            row.add(pn.ngayNhap);
            row.add(pn.gioNhap);
            row.add(pn.tongTien);
            model.addRow(row);
        }
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnLamMoi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoi1ActionPerformed
        // TODO add your handling code here:
        txtTimKiem1.setText("");
        cboTimKiem1.setSelectedIndex(0); 
        
        int l = tblPhieuNhap.getSelectedRow();
        if(l>=0){
            String maPN= (String) tblPhieuNhap.getModel().getValueAt(l, 1);
            PhieuNhapBUS bus = new PhieuNhapBUS();
            bus.docChiTiet_PN(maPN);

            model1.setRowCount(0);
            int i = 1;
            for (ChiTietPhieuNhapDTO ctpn : PhieuNhapBUS.dsCTPN) {
                Vector row = new Vector();
                row.add(i++);
                row.add(ctpn.maPN);
                row.add(ctpn.ho);
                row.add(ctpn.ten);
                row.add(ctpn.tenNCC);
                row.add(ctpn.tenSP);
                row.add(ctpn.soLuong);
                row.add(ctpn.donGia);
                row.add(ctpn.thanhTien);
                model1.addRow(row);
            }
        }
        
    }//GEN-LAST:event_btnLamMoi1ActionPerformed

    private void btnXuatEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatEXActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Ch·ªçn n∆°i l∆∞u file Excel");

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();

            // ƒê·∫£m b·∫£o file c√≥ ƒëu√¥i .xlsx
            String filePath = fileToSave.getAbsolutePath();
            if (!filePath.endsWith(".xlsx")) {
                filePath += ".xlsx";
            }

            try (XSSFWorkbook workbook = new XSSFWorkbook()) {
                XSSFSheet sheet = workbook.createSheet("Phi·∫øu Nh·∫≠p");

                DefaultTableModel model = (DefaultTableModel) tblPhieuNhap.getModel();

                // Ghi ti√™u ƒë·ªÅ c·ªôt
                Row header = sheet.createRow(0);
                for (int i = 0; i < model.getColumnCount(); i++) {
                    Cell cell = header.createCell(i);
                    cell.setCellValue(model.getColumnName(i));
                }

                // Ghi d·ªØ li·ªáu t·ª´ng d√≤ng
                for (int row = 0; row < model.getRowCount(); row++) {
                    Row excelRow = sheet.createRow(row + 1);
                    for (int col = 0; col < model.getColumnCount(); col++) {
                        Cell cell = excelRow.createCell(col);
                        Object value = model.getValueAt(row, col);
                        cell.setCellValue(value != null ? value.toString() : "");
                    }
                }

                // Ghi ra file
                try (FileOutputStream fos = new FileOutputStream(filePath)) {
                    workbook.write(fos);
                }

                JOptionPane.showMessageDialog(this, "Xu·∫•t Excel th√†nh c√¥ng:\n" + filePath);

            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "L·ªói khi xu·∫•t Excel: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnXuatEXActionPerformed

    private void btnInPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInPDFActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Ch·ªçn n∆°i l∆∞u file PDF");

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            String filePath = fileToSave.getAbsolutePath();
            if (!filePath.endsWith(".pdf")) {
                filePath += ".pdf";
            }

            try {
                Document document = new Document();
                PdfWriter.getInstance(document, new FileOutputStream(filePath));
                document.open();

                PdfPTable pdfTable = new PdfPTable(tblPhieuNhap.getColumnCount());

                // Ghi ti√™u ƒë·ªÅ c·ªôt
                for (int i = 0; i < tblPhieuNhap.getColumnCount(); i++) {
                    pdfTable.addCell(tblPhieuNhap.getColumnName(i));
                }

                // Ghi d·ªØ li·ªáu d√≤ng
                for (int rows = 0; rows < tblPhieuNhap.getRowCount(); rows++) {
                    for (int cols = 0; cols < tblPhieuNhap.getColumnCount(); cols++) {
                        Object value = tblPhieuNhap.getValueAt(rows, cols);
                        pdfTable.addCell(value != null ? value.toString() : "");
                    }
                }

                document.add(pdfTable);
                document.close();

                JOptionPane.showMessageDialog(this, "Xu·∫•t PDF th√†nh c√¥ng:\n" + filePath);
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "L·ªói khi xu·∫•t PDF: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnInPDFActionPerformed

    private void timKiem() {
        if (PhieuNhapBUS.dsPN == null) return;
        String tieuChi = cboTimKiem.getSelectedItem().toString();
        String tuKhoa = txtTimKiem.getText().toLowerCase().trim();
        String tienTuStr = txtTienTu.getText().trim();
        String tienDenStr = txtTienDen.getText().trim();

        model.setRowCount(0);  // X√≥a b·∫£ng c≈©
        int i = 1;

        for (PhieuNhapDTO pn : PhieuNhapBUS.dsPN) {
            boolean match = false;
            
            // 1. L·ªçc theo ti√™u ch√≠ ch·ªçn trong combo box
            switch (tieuChi) {
                case "T·∫•t c·∫£":
                    match =
                        pn.maPN.toLowerCase().contains(tuKhoa) ||
                        pn.maNV.toLowerCase().contains(tuKhoa) ||
                        pn.maNCC.toLowerCase().contains(tuKhoa) ||
                        pn.ngayNhap.toLowerCase().contains(tuKhoa) ||
                        pn.gioNhap.toLowerCase().contains(tuKhoa) ||
                        pn.tongTien.toLowerCase().contains(tuKhoa);
                    break;

                case "M√£ phi·∫øu nh·∫≠p":
                    match = pn.maPN.toLowerCase().contains(tuKhoa);
                    break;

                case "M√£ nh√¢n vi√™n":
                    match = pn.maNV.toLowerCase().contains(tuKhoa);
                    break;

                case "M√£ nh√† cung c·∫•p":
                    match = pn.maNCC.toLowerCase().contains(tuKhoa);
                    break;

                case "Gi·ªù nh·∫≠p":
                    match = pn.gioNhap.toLowerCase().contains(tuKhoa);
                    break;

                case "Ng√†y nh·∫≠p":
                    match = pn.ngayNhap.toLowerCase().contains(tuKhoa);                   
                    break;

                case "T·ªïng ti·ªÅn":
                    match = pn.tongTien.toLowerCase().contains(tuKhoa);  
                    break;
            }
            
            // 2. L·ªçc th√™m theo ng√†y n·∫øu c√≥ nh·∫≠p
            if (match && dateFrom.getDate() != null && dateTo.getDate() != null) {
                try {
                    Date fromDate = dateFrom.getDate();
                    Date toDate = dateTo.getDate();

                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    Date ngayNhap = sdf.parse(pn.ngayNhap.trim());

                    if (ngayNhap.before(fromDate) || ngayNhap.after(toDate)) {
                        match = false;
                    }
                } catch (ParseException e) {
                    e.printStackTrace();
                    match = false;
                }
            }

            // 3. L·ªçc th√™m theo t·ªïng ti·ªÅn n·∫øu c√≥ nh·∫≠p
            if (match && !tienTuStr.isEmpty() && !tienDenStr.isEmpty()) {
                try {
                    double tongTien = Double.parseDouble(pn.tongTien);
                    double tienTu = Double.parseDouble(tienTuStr);
                    double tienDen = Double.parseDouble(tienDenStr);
                    match &= (tongTien >= tienTu && tongTien <= tienDen);
                } catch (NumberFormatException e) {
                    match = false;
                }
            }
            
            if (match) {
                Vector row = new Vector();
                row.add(i++);
                row.add(pn.maPN);
                row.add(pn.maNV);
                row.add(pn.maNCC);
                row.add(pn.ngayNhap);
                row.add(pn.gioNhap);
                row.add(pn.tongTien);
                model.addRow(row);
            }
        }
    }
    private void timKiem1() {
        if (PhieuNhapBUS.dsCTPN == null) return;
        String tieuChi = cboTimKiem1.getSelectedItem().toString();
        String tuKhoa = txtTimKiem1.getText().toLowerCase().trim();
        

        model1.setRowCount(0);  // X√≥a b·∫£ng c≈©
        int i = 1;

        for (ChiTietPhieuNhapDTO ctpn : PhieuNhapBUS.dsCTPN) {
            boolean match = false;
            
            // L·ªçc theo ti√™u ch√≠ ch·ªçn trong combo box
            switch (tieuChi) {
                case "T·∫•t c·∫£":
                    match =
                        ctpn.maPN.toLowerCase().contains(tuKhoa) ||
                        ctpn.ten.toLowerCase().contains(tuKhoa) ||
                        ctpn.tenNCC.toLowerCase().contains(tuKhoa) ||
                        ctpn.tenSP.toLowerCase().contains(tuKhoa) ||
                        ctpn.soLuong.toLowerCase().contains(tuKhoa) ||
                        ctpn.donGia.toLowerCase().contains(tuKhoa) ||
                        ctpn.thanhTien.toLowerCase().contains(tuKhoa);
                    break;

                case "M√£ phi·∫øu nh·∫≠p":
                    match = ctpn.maPN.toLowerCase().contains(tuKhoa);
                    break;

                case "T√™n nh√¢n vi√™n":
                    match = ctpn.ten.toLowerCase().contains(tuKhoa);
                    break;

                case "T√™n nh√† cung c·∫•p":
                    match = ctpn.tenNCC.toLowerCase().contains(tuKhoa);
                    break;

                case "T√™n s·∫£n ph·∫©m":
                    match = ctpn.tenSP.toLowerCase().contains(tuKhoa);
                    break;

                case "S·ªë l∆∞·ª£ng":
                    match = ctpn.soLuong.toLowerCase().contains(tuKhoa);                   
                    break;

                case "ƒê∆°n gi√°":
                    match = ctpn.donGia.toLowerCase().contains(tuKhoa);                   
                    break;
                    
                case "Th√†nh ti·ªÅn":
                    match = ctpn.thanhTien.toLowerCase().contains(tuKhoa);  
                    break;
            }
            
            if (match) {
                Vector row = new Vector();
                row.add(i++);
                row.add(ctpn.maPN);
                row.add(ctpn.ho);
                row.add(ctpn.ten);
                row.add(ctpn.tenNCC);
                row.add(ctpn.tenSP);
                row.add(ctpn.soLuong);
                row.add(ctpn.donGia);
                row.add(ctpn.thanhTien);
                model1.addRow(row);
            }
        }
        tblChiTietPN.setModel(model1);
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnInPDF;
    public javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLamMoi1;
    public javax.swing.JButton btnNhapEX;
    public javax.swing.JButton btnXuatEX;
    public javax.swing.JComboBox<String> cboTimKiem;
    private javax.swing.JComboBox<String> cboTimKiem1;
    public com.toedter.calendar.JDateChooser dateFrom;
    public com.toedter.calendar.JDateChooser dateTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public javax.swing.JPanel jPanel5;
    public javax.swing.JPanel jPanel6;
    public javax.swing.JPanel jPanel7;
    public javax.swing.JPanel jPanel8;
    public javax.swing.JPanel jPanel9;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable tblChiTietPN;
    public javax.swing.JTable tblPhieuNhap;
    public javax.swing.JTextField txtTienDen;
    public javax.swing.JTextField txtTienTu;
    public javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTimKiem1;
    // End of variables declaration//GEN-END:variables
}
